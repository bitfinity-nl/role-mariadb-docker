#---
# Title: role-mariadb-docker
#
# Author: Bitfinity / L. Rutten
# Owner: Bitfinity / L. Rutten
#
# File: tasks/03-mariadb-backup.yml
#
# Description:
#   This is taskfile contains steps for
#   setup database backups.
#
- name: "Install APT-packages"
  ansible.builtin.apt:
    name: "{{ mariadb_backup_packages.name }}"
    state: present
  loop:
    - { name: 'cron', desc: 'For scheduling backup' }
    - { name: 'python3-pymysql', desc: 'Python for MySQL or MariaDB' }
  loop_control:
    loop_var: mariadb_backup_packages

- name: "Create MariaDB directory structure"
  ansible.builtin.file:
    path: "{{ mariadb_backup_path }}"
    state: directory
    owner: root
    group: backup
    mode: 0660
    
- name: "Transfer template(s)"
  ansible.builtin.template:
    src: "{{ mariadb_backup_templates.src }}"
    dest: "{{ mariadb_backup_templates.dest }}"
    owner: "{{ mariadb_backup_templates.owner }}"
    group: "{{ mariadb_backup_templates.group }}"
    mode: "{{ mariadb_backup_templates.mode }}"
  loop:
    - { src: '.env.j2', dest: '/root/.env', owner: 'root', group: 'root', mode: '0600' }
    - { src: 'mariadb-backup-logical.sh.j2', dest: '/root/mariadb-backup.sh', owner: 'root', group: 'root', mode: '0700' }
  loop_control:
    loop_var: mariadb_backup_templates
    
- name: "Schedule backup script"
  ansible.builtin.cron:
    name: "Schedule database backup daily at {{ mariadb_backup_minute }} minutes past {{ mariadb_backup_hour }}"
    minute: "{{ mariadb_backup_minute }}"
    hour: "{{ mariadb_backup_hour }}"
    job: "~/mariadb-backup.sh >/dev/null 2>&1"
